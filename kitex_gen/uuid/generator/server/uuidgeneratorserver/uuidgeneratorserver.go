// Code generated by Kitex v0.8.0. DO NOT EDIT.

package uuidgeneratorserver

import (
	"context"
	client "github.com/cloudwego/kitex/client"
	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
	server0 "uuid_client/kitex_gen/uuid/generator/server"
)

func serviceInfo() *kitex.ServiceInfo {
	return uUIDGeneratorServerServiceInfo
}

var uUIDGeneratorServerServiceInfo = NewServiceInfo()

func NewServiceInfo() *kitex.ServiceInfo {
	serviceName := "UUIDGeneratorServer"
	handlerType := (*server0.UUIDGeneratorServer)(nil)
	methods := map[string]kitex.MethodInfo{
		"GetUUIDBounds": kitex.NewMethodInfo(getUUIDBoundsHandler, newUUIDGeneratorServerGetUUIDBoundsArgs, newUUIDGeneratorServerGetUUIDBoundsResult, false),
	}
	extra := map[string]interface{}{
		"PackageName":     "server",
		"ServiceFilePath": `idl\uuid_generator_server.thrift`,
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName:     serviceName,
		HandlerType:     handlerType,
		Methods:         methods,
		PayloadCodec:    kitex.Thrift,
		KiteXGenVersion: "v0.8.0",
		Extra:           extra,
	}
	return svcInfo
}

func getUUIDBoundsHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*server0.UUIDGeneratorServerGetUUIDBoundsArgs)
	realResult := result.(*server0.UUIDGeneratorServerGetUUIDBoundsResult)
	success, err := handler.(server0.UUIDGeneratorServer).GetUUIDBounds(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newUUIDGeneratorServerGetUUIDBoundsArgs() interface{} {
	return server0.NewUUIDGeneratorServerGetUUIDBoundsArgs()
}

func newUUIDGeneratorServerGetUUIDBoundsResult() interface{} {
	return server0.NewUUIDGeneratorServerGetUUIDBoundsResult()
}

type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}

func (p *kClient) GetUUIDBounds(ctx context.Context, req *server0.GetUUIDBoundsRequest) (r *server0.GetUUIDBoundsResponse, err error) {
	var _args server0.UUIDGeneratorServerGetUUIDBoundsArgs
	_args.Req = req
	var _result server0.UUIDGeneratorServerGetUUIDBoundsResult
	if err = p.c.Call(ctx, "GetUUIDBounds", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
